{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import styled from 'styled-components';\n// import axios from 'axios';\n\n// const HomeContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n//   height: 100vh;\n//   padding: 0 20px;\n// `;\n\n// const Title = styled.h1`\n//   font-size: 24px;\n//   margin-bottom: 40px;\n//   text-align: center;\n// `;\n\n// const Form = styled.form`\n//   width: 100%;\n//   max-width: 400px;\n//   display: flex;\n//   flex-direction: column;\n// `;\n\n// const InputGroup = styled.div`\n//   margin-bottom: 24px;\n//   width: 100%;\n// `;\n\n// const Label = styled.label`\n//   font-size: 14px;\n//   margin-bottom: 8px;\n//   display: block;\n//   font-weight: 500;\n// `;\n\n// const Input = styled.input`\n//   width: 100%;\n//   padding: 12px 16px;\n//   border: 1px solid #e0e0e0;\n//   border-radius: 8px;\n//   font-size: 16px;\n\n//   &:focus {\n//     outline: none;\n//     border-color: #007aff;\n//   }\n// `;\n\n// const ButtonContainer = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   margin-top: 16px;\n// `;\n\n// const Button = styled.button`\n//   padding: 12px 24px;\n//   background-color: #007aff;\n//   color: white;\n//   border: none;\n//   border-radius: 8px;\n//   font-size: 16px;\n//   font-weight: 500;\n//   cursor: pointer;\n//   flex: ${props => props.fullWidth ? '1' : 'initial'};\n\n//   &:hover {\n//     background-color: #0062cc;\n//   }\n\n//   &:disabled {\n//     background-color: #cccccc;\n//     cursor: default;\n//   }\n// `;\n\n// const SecondaryButton = styled(Button)`\n//   background-color: #f5f5f5;\n//   color: #333;\n//   margin-right: 16px;\n\n//   &:hover {\n//     background-color: #e0e0e0;\n//   }\n// `;\n\n// const ErrorMessage = styled.div`\n//   color: #d32f2f;\n//   font-size: 14px;\n//   padding: 12px;\n//   margin-bottom: 16px;\n//   background-color: rgba(211, 47, 47, 0.08);\n//   border-radius: 8px;\n//   display: flex;\n//   align-items: center;\n\n//   &:before {\n//     content: \"!\";\n//     display: inline-flex;\n//     align-items: center;\n//     justify-content: center;\n//     width: 20px;\n//     height: 20px;\n//     border-radius: 50%;\n//     background-color: #d32f2f;\n//     color: white;\n//     font-weight: bold;\n//     margin-right: 8px;\n//   }\n// `;\n\n// const Home = () => {\n//   const [name, setName] = useState(localStorage.getItem('username') || '');\n//   const [roomId, setRoomId] = useState('');\n//   const [isCreatingRoom, setIsCreatingRoom] = useState(false);\n//   const [isJoiningRoom, setIsJoiningRoom] = useState(false);\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleJoin = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     // Save user name to local storage\n//     if (name) {\n//       localStorage.setItem('username', name);\n//     }\n\n//     if (!roomId) {\n//       setError(\"Please enter a room ID\");\n//       return;\n//     }\n\n//     setIsJoiningRoom(true);\n\n//     try {\n//       // Check if room exists by trying to fetch room details\n//       const response = await axios.get(`http://localhost:8001/api/rooms/${roomId}/participants`);\n\n//       // If we get here, the room exists\n//       navigate(`/select-partners`, { state: { roomId } });\n//     } catch (error) {\n//       console.error(\"Error verifying room:\", error);\n//       if (error.response && error.response.status === 404) {\n//         setError(\"Room not found. Please check the room ID and try again.\");\n//       } else {\n//         setError(\"Failed to join room. Please try again later.\");\n//       }\n//     } finally {\n//       setIsJoiningRoom(false);\n//     }\n//   };\n\n//   const handleCreate = async () => {\n//     setError('');\n//     setIsCreatingRoom(true);\n\n//     try {\n//       // Save user name to local storage\n//       if (name) {\n//         localStorage.setItem('username', name);\n//       }\n\n//       // Create a new room\n//       const response = await axios.post('http://localhost:8001/api/rooms/create/', {\n//         name: `${name}'s Room`\n//       });\n\n//       const newRoomId = response.data.room_id;\n\n//       // Navigate to AI partner selection with the new room ID\n//       navigate(`/select-partners`, { state: { roomId: newRoomId } });\n//     } catch (error) {\n//       console.error(\"Error creating room:\", error);\n//       setError(\"Failed to create room. Please try again later.\");\n//     } finally {\n//       setIsCreatingRoom(false);\n//     }\n//   };\n\n//   return (\n//     <HomeContainer>\n//       <Title>BrainstorMate</Title>\n\n//       <Form onSubmit={handleJoin}>\n//         <InputGroup>\n//           <Label htmlFor=\"name\">Your Name</Label>\n//           <Input\n//             id=\"name\"\n//             type=\"text\"\n//             placeholder=\"Enter your name\"\n//             value={name}\n//             onChange={(e) => setName(e.target.value)}\n//             required\n//           />\n//         </InputGroup>\n\n//         <InputGroup>\n//           <Label htmlFor=\"roomId\">Room ID</Label>\n//           <Input\n//             id=\"roomId\"\n//             type=\"text\"\n//             placeholder=\"Enter room ID to join\"\n//             value={roomId}\n//             onChange={(e) => setRoomId(e.target.value)}\n//             required\n//           />\n//         </InputGroup>\n\n//         {error && (\n//           <ErrorMessage role=\"alert\">\n//             {error}\n//           </ErrorMessage>\n//         )}\n\n//         <ButtonContainer>\n//           <SecondaryButton\n//             type=\"button\"\n//             onClick={handleCreate}\n//             disabled={!name || isCreatingRoom || isJoiningRoom}\n//           >\n//             {isCreatingRoom ? 'Creating...' : 'Create Room'}\n//           </SecondaryButton>\n\n//           <Button \n//             type=\"submit\"\n//             disabled={!name || !roomId || isCreatingRoom || isJoiningRoom}\n//           >\n//             {isJoiningRoom ? 'Joining...' : 'Join Room'}\n//           </Button>\n//         </ButtonContainer>\n//       </Form>\n//     </HomeContainer>\n//   );\n// };\n\n// export default Home;","map":{"version":3,"names":[],"sources":["C:/Users/user/OneDrive/桌面/HCI+D/video_app/frontend/src/components/Home.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import styled from 'styled-components';\r\n// import axios from 'axios';\r\n\r\n// const HomeContainer = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   height: 100vh;\r\n//   padding: 0 20px;\r\n// `;\r\n\r\n// const Title = styled.h1`\r\n//   font-size: 24px;\r\n//   margin-bottom: 40px;\r\n//   text-align: center;\r\n// `;\r\n\r\n// const Form = styled.form`\r\n//   width: 100%;\r\n//   max-width: 400px;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n// `;\r\n\r\n// const InputGroup = styled.div`\r\n//   margin-bottom: 24px;\r\n//   width: 100%;\r\n// `;\r\n\r\n// const Label = styled.label`\r\n//   font-size: 14px;\r\n//   margin-bottom: 8px;\r\n//   display: block;\r\n//   font-weight: 500;\r\n// `;\r\n\r\n// const Input = styled.input`\r\n//   width: 100%;\r\n//   padding: 12px 16px;\r\n//   border: 1px solid #e0e0e0;\r\n//   border-radius: 8px;\r\n//   font-size: 16px;\r\n  \r\n//   &:focus {\r\n//     outline: none;\r\n//     border-color: #007aff;\r\n//   }\r\n// `;\r\n\r\n// const ButtonContainer = styled.div`\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   margin-top: 16px;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n//   padding: 12px 24px;\r\n//   background-color: #007aff;\r\n//   color: white;\r\n//   border: none;\r\n//   border-radius: 8px;\r\n//   font-size: 16px;\r\n//   font-weight: 500;\r\n//   cursor: pointer;\r\n//   flex: ${props => props.fullWidth ? '1' : 'initial'};\r\n  \r\n//   &:hover {\r\n//     background-color: #0062cc;\r\n//   }\r\n  \r\n//   &:disabled {\r\n//     background-color: #cccccc;\r\n//     cursor: default;\r\n//   }\r\n// `;\r\n\r\n// const SecondaryButton = styled(Button)`\r\n//   background-color: #f5f5f5;\r\n//   color: #333;\r\n//   margin-right: 16px;\r\n  \r\n//   &:hover {\r\n//     background-color: #e0e0e0;\r\n//   }\r\n// `;\r\n\r\n// const ErrorMessage = styled.div`\r\n//   color: #d32f2f;\r\n//   font-size: 14px;\r\n//   padding: 12px;\r\n//   margin-bottom: 16px;\r\n//   background-color: rgba(211, 47, 47, 0.08);\r\n//   border-radius: 8px;\r\n//   display: flex;\r\n//   align-items: center;\r\n  \r\n//   &:before {\r\n//     content: \"!\";\r\n//     display: inline-flex;\r\n//     align-items: center;\r\n//     justify-content: center;\r\n//     width: 20px;\r\n//     height: 20px;\r\n//     border-radius: 50%;\r\n//     background-color: #d32f2f;\r\n//     color: white;\r\n//     font-weight: bold;\r\n//     margin-right: 8px;\r\n//   }\r\n// `;\r\n\r\n// const Home = () => {\r\n//   const [name, setName] = useState(localStorage.getItem('username') || '');\r\n//   const [roomId, setRoomId] = useState('');\r\n//   const [isCreatingRoom, setIsCreatingRoom] = useState(false);\r\n//   const [isJoiningRoom, setIsJoiningRoom] = useState(false);\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n  \r\n//   const handleJoin = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n    \r\n//     // Save user name to local storage\r\n//     if (name) {\r\n//       localStorage.setItem('username', name);\r\n//     }\r\n    \r\n//     if (!roomId) {\r\n//       setError(\"Please enter a room ID\");\r\n//       return;\r\n//     }\r\n    \r\n//     setIsJoiningRoom(true);\r\n    \r\n//     try {\r\n//       // Check if room exists by trying to fetch room details\r\n//       const response = await axios.get(`http://localhost:8001/api/rooms/${roomId}/participants`);\r\n      \r\n//       // If we get here, the room exists\r\n//       navigate(`/select-partners`, { state: { roomId } });\r\n//     } catch (error) {\r\n//       console.error(\"Error verifying room:\", error);\r\n//       if (error.response && error.response.status === 404) {\r\n//         setError(\"Room not found. Please check the room ID and try again.\");\r\n//       } else {\r\n//         setError(\"Failed to join room. Please try again later.\");\r\n//       }\r\n//     } finally {\r\n//       setIsJoiningRoom(false);\r\n//     }\r\n//   };\r\n  \r\n//   const handleCreate = async () => {\r\n//     setError('');\r\n//     setIsCreatingRoom(true);\r\n    \r\n//     try {\r\n//       // Save user name to local storage\r\n//       if (name) {\r\n//         localStorage.setItem('username', name);\r\n//       }\r\n      \r\n//       // Create a new room\r\n//       const response = await axios.post('http://localhost:8001/api/rooms/create/', {\r\n//         name: `${name}'s Room`\r\n//       });\r\n      \r\n//       const newRoomId = response.data.room_id;\r\n      \r\n//       // Navigate to AI partner selection with the new room ID\r\n//       navigate(`/select-partners`, { state: { roomId: newRoomId } });\r\n//     } catch (error) {\r\n//       console.error(\"Error creating room:\", error);\r\n//       setError(\"Failed to create room. Please try again later.\");\r\n//     } finally {\r\n//       setIsCreatingRoom(false);\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <HomeContainer>\r\n//       <Title>BrainstorMate</Title>\r\n      \r\n//       <Form onSubmit={handleJoin}>\r\n//         <InputGroup>\r\n//           <Label htmlFor=\"name\">Your Name</Label>\r\n//           <Input\r\n//             id=\"name\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your name\"\r\n//             value={name}\r\n//             onChange={(e) => setName(e.target.value)}\r\n//             required\r\n//           />\r\n//         </InputGroup>\r\n        \r\n//         <InputGroup>\r\n//           <Label htmlFor=\"roomId\">Room ID</Label>\r\n//           <Input\r\n//             id=\"roomId\"\r\n//             type=\"text\"\r\n//             placeholder=\"Enter room ID to join\"\r\n//             value={roomId}\r\n//             onChange={(e) => setRoomId(e.target.value)}\r\n//             required\r\n//           />\r\n//         </InputGroup>\r\n        \r\n//         {error && (\r\n//           <ErrorMessage role=\"alert\">\r\n//             {error}\r\n//           </ErrorMessage>\r\n//         )}\r\n        \r\n//         <ButtonContainer>\r\n//           <SecondaryButton\r\n//             type=\"button\"\r\n//             onClick={handleCreate}\r\n//             disabled={!name || isCreatingRoom || isJoiningRoom}\r\n//           >\r\n//             {isCreatingRoom ? 'Creating...' : 'Create Room'}\r\n//           </SecondaryButton>\r\n          \r\n//           <Button \r\n//             type=\"submit\"\r\n//             disabled={!name || !roomId || isCreatingRoom || isJoiningRoom}\r\n//           >\r\n//             {isJoiningRoom ? 'Joining...' : 'Join Room'}\r\n//           </Button>\r\n//         </ButtonContainer>\r\n//       </Form>\r\n//     </HomeContainer>\r\n//   );\r\n// };\r\n\r\n// export default Home;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}