{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u684C\\u9762\\\\HCI+D\\\\video_app\\\\frontend\\\\src\\\\components\\\\VideoRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Peer from 'simple-peer';\nimport axios from 'axios';\nimport Chat from './Chat';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoRoomContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  width: 100%;\n  position: relative;\n`;\n_c = VideoRoomContainer;\nconst Header = styled.div`\n  display: flex;\n  justify-content: center; // Center the room title\n  align-items: center;\n  padding: 12px 16px;\n  border-bottom: 1px solid #e0e0e0;\n`;\n_c2 = Header;\nconst RoomTitle = styled.h2`\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n`;\n_c3 = RoomTitle;\nconst FeedbackSection = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  background-color: #fff;\n  border-bottom: 1px solid #e0e0e0;\n`;\n_c4 = FeedbackSection;\nconst FeedbackItem = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n`;\n_c5 = FeedbackItem;\nconst Avatar = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 20px;\n  background-color: #e0e0e0;\n  margin-right: 12px;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c6 = Avatar;\nconst AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\nconst FeedbackContent = styled.div`\n  flex: 1;\n`;\n_c7 = FeedbackContent;\nconst AgentName = styled.div`\n  font-weight: 600;\n  font-size: 14px;\n  margin-bottom: 4px;\n`;\n_c8 = AgentName;\nconst FeedbackText = styled.div`\n  font-size: 14px;\n`;\n_c9 = FeedbackText;\nconst VideoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 16px;\n  padding: 16px;\n  background-color: #f5f5f5;\n  flex: 1;\n  position: relative;\n`;\n_c10 = VideoGrid;\nconst VideoContainer = styled.div`\n  position: relative;\n  aspect-ratio: 4/3;\n  background-color: #000;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n_c11 = VideoContainer;\nconst ParticipantVideo = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n_c12 = ParticipantVideo;\nconst ParticipantName = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n`;\n\n// New styled component for self-video in bottom right\n_c13 = ParticipantName;\nconst SelfVideoContainer = styled.div`\n  position: absolute;\n  bottom: 10px; // Position above control bar\n  right: 10px;\n  width: 180px; // Smaller size\n  border-radius: 8px;\n  overflow: hidden;\n  aspect-ratio: 4/3;\n  background-color: #000;\n  z-index: 10;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  display: ${props => props.visible ? 'block' : 'none'}; // Hide when video is off\n`;\n_c14 = SelfVideoContainer;\nconst ControlBar = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 16px;\n  background-color: #fff;\n  border-top: 1px solid #e0e0e0;\n`;\n_c15 = ControlBar;\nconst ControlButton = styled.button`\n  width: 40px;\n  height: 40px;\n  border-radius: 20px;\n  margin: 0 8px;\n  background-color: ${props => props.danger ? '#ff4d4f' : '#f0f0f0'};\n  color: ${props => props.danger ? 'white' : 'black'};\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    background-color: ${props => props.danger ? '#ff7875' : '#d9d9d9'};\n  }\n`;\n_c16 = ControlButton;\nconst ChatButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 20px;\n  background-color: #f0f0f0;\n  border: none;\n  cursor: pointer;\n  margin-right: 16px;\n  \n  &:hover {\n    background-color: #d9d9d9;\n  }\n`;\n_c17 = ChatButton;\nconst VideoRoom = () => {\n  _s();\n  var _location$state;\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [aiPartners, setAiPartners] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.aiPartners) || []);\n  const [userName, setUserName] = useState(localStorage.getItem('userName') || 'You');\n  const [peers, setPeers] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [aiFeedback, setAiFeedback] = useState([]);\n  const [showChat, setShowChat] = useState(false);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const socketRef = useRef();\n  const streamRef = useRef();\n  useEffect(() => {\n    // Connect to the WebSocket\n    socketRef.current = new WebSocket(`ws://localhost:3000/ws/chat/${roomId}/`);\n\n    // Get user media and set up connections\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n\n      // Join room\n      joinRoom();\n\n      // Set up WebSocket handlers\n      setupWebSocket();\n\n      // Get participants and messages\n      fetchParticipants();\n      fetchMessages();\n\n      // Generate AI feedback\n      if (aiPartners.length > 0) {\n        generateAIFeedback();\n      }\n    }).catch(error => {\n      console.error(\"Error accessing media devices:\", error);\n      alert(\"Could not access camera or microphone. Please check permissions.\");\n    });\n    return () => {\n      // Clean up\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n      peersRef.current.forEach(peer => {\n        if (peer.peer) {\n          peer.peer.destroy();\n        }\n      });\n    };\n  }, [roomId]);\n  const joinRoom = async () => {\n    try {\n      // Register participant in the room\n      await axios.post(`/api/rooms/${roomId}/join/`, {\n        name: userName,\n        is_ai: false\n      });\n\n      // Register AI partners in the room\n      for (const agent of aiPartners) {\n        await axios.post(`/api/rooms/${roomId}/join/`, {\n          name: agent.name,\n          is_ai: true,\n          ai_agent: agent.id\n        });\n      }\n    } catch (error) {\n      console.error(\"Error joining room:\", error);\n    }\n  };\n  const setupWebSocket = () => {\n    socketRef.current.onopen = () => {\n      console.log(\"WebSocket connection established\");\n\n      // Signal to other participants that we've joined\n      socketRef.current.send(JSON.stringify({\n        type: 'signal',\n        signal: {\n          type: 'new-participant'\n        },\n        caller_id: userName\n      }));\n    };\n    socketRef.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'message') {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: data.sender,\n          content: data.message,\n          is_ai: data.is_ai\n        }]);\n\n        // If AI message contains feedback, add it to feedback section\n        if (data.is_ai && data.message_type === 'feedback') {\n          setAiFeedback(prev => [...prev, {\n            agent: data.sender,\n            content: data.message\n          }]);\n        }\n      } else if (data.type === 'signal') {\n        handleSignal(data);\n      }\n    };\n    socketRef.current.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n    socketRef.current.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n    };\n  };\n  const handleSignal = data => {\n    const {\n      signal,\n      caller_id,\n      receiver_id\n    } = data;\n\n    // If signal is for a new participant\n    if (signal.type === 'new-participant' && caller_id !== userName) {\n      const peer = createPeer(caller_id);\n      peersRef.current.push({\n        peerId: caller_id,\n        peer: peer\n      });\n      socketRef.current.send(JSON.stringify({\n        type: 'signal',\n        signal: {\n          type: 'participant-ready'\n        },\n        caller_id: userName,\n        receiver_id: caller_id\n      }));\n    }\n\n    // If signal is from a participant who is ready to connect\n    else if (signal.type === 'participant-ready' && receiver_id === userName) {\n      const peer = addPeer(caller_id, signal);\n      peersRef.current.push({\n        peerId: caller_id,\n        peer: peer\n      });\n    }\n\n    // Handle WebRTC signaling\n    else if (signal.sdp || signal.candidate) {\n      const item = peersRef.current.find(p => p.peerId === caller_id);\n      if (item) {\n        item.peer.signal(signal);\n      }\n    }\n  };\n  const createPeer = participantId => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: streamRef.current\n    });\n    peer.on('signal', signal => {\n      socketRef.current.send(JSON.stringify({\n        type: 'signal',\n        signal: signal,\n        caller_id: userName,\n        receiver_id: participantId\n      }));\n    });\n    peer.on('stream', stream => {\n      setPeers(users => [...users, {\n        id: participantId,\n        stream: stream\n      }]);\n    });\n    return peer;\n  };\n  const addPeer = (participantId, incomingSignal) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: streamRef.current\n    });\n    peer.on('signal', signal => {\n      socketRef.current.send(JSON.stringify({\n        type: 'signal',\n        signal: signal,\n        caller_id: userName,\n        receiver_id: participantId\n      }));\n    });\n    peer.on('stream', stream => {\n      setPeers(users => [...users, {\n        id: participantId,\n        stream: stream\n      }]);\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n  const fetchParticipants = async () => {\n    try {\n      const response = await axios.get(`/api/rooms/${roomId}/participants/`);\n      setParticipants(response.data);\n    } catch (error) {\n      console.error(\"Error fetching participants:\", error);\n    }\n  };\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`/api/rooms/${roomId}/messages/`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  };\n  const generateAIFeedback = () => {\n    // Simulated AI feedback for demonstration\n    // In a real application, this would come from an AI service\n    const initialFeedback = aiPartners.map(agent => ({\n      agent: agent.name,\n      content: `Hello, I'm ${agent.name}, your ${agent.role} AI assistant. I'm here to help with the meeting.`\n    }));\n    setAiFeedback(initialFeedback);\n\n    // Simulate AI sending periodic feedback\n    const feedbackInterval = setInterval(() => {\n      const randomAgent = aiPartners[Math.floor(Math.random() * aiPartners.length)];\n      if (randomAgent) {\n        const feedback = {\n          agent: randomAgent.name,\n          content: generateRandomFeedback(randomAgent.role)\n        };\n        setAiFeedback(prev => [...prev, feedback]);\n\n        // Also send to chat\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n          socketRef.current.send(JSON.stringify({\n            type: 'message',\n            message: feedback.content,\n            sender: feedback.agent,\n            is_ai: true,\n            message_type: 'feedback'\n          }));\n        }\n      }\n    }, 15000); // Every 15 seconds\n\n    return () => clearInterval(feedbackInterval);\n  };\n  const generateRandomFeedback = role => {\n    const feedbackOptions = {\n      'Designer': [\"I notice the UI elements could be more consistent. Consider a unified color scheme.\", \"The user flow seems to have some friction points. We should simplify the navigation.\", \"Visual hierarchy could be improved to guide users more effectively.\", \"Have you considered accessibility in this design? Some elements may need better contrast.\"],\n      'Engineer': [\"The current architecture might have scaling issues with high user loads.\", \"We should consider optimizing the database queries for better performance.\", \"This would be a good opportunity to implement caching to reduce server load.\", \"The current solution works, but we might want to refactor for better maintainability.\"],\n      'Finance': [\"Based on our projections, we should allocate more resources to marketing.\", \"The ROI on this feature seems promising based on current metrics.\", \"We need to consider the cost implications of this infrastructure change.\", \"From a financial perspective, we should prioritize features with higher revenue potential.\"],\n      'Professor': [\"This approach aligns with recent research in the field.\", \"Consider the theoretical implications of this decision framework.\", \"We should examine some case studies that have implemented similar solutions.\", \"The methodology needs more rigorous validation before proceeding.\"]\n    };\n    const options = feedbackOptions[role] || [\"I have some insights to share about this discussion.\"];\n    return options[Math.floor(Math.random() * options.length)];\n  };\n  const toggleVideo = () => {\n    if (streamRef.current) {\n      streamRef.current.getVideoTracks().forEach(track => {\n        track.enabled = !videoEnabled;\n      });\n      setVideoEnabled(!videoEnabled);\n    }\n  };\n  const toggleAudio = () => {\n    if (streamRef.current) {\n      streamRef.current.getAudioTracks().forEach(track => {\n        track.enabled = !audioEnabled;\n      });\n      setAudioEnabled(!audioEnabled);\n    }\n  };\n  const leaveRoom = () => {\n    navigate('/'); // Navigate to home page\n  };\n  const sendMessage = message => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(JSON.stringify({\n        type: 'message',\n        message: message,\n        sender: userName,\n        is_ai: false\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(VideoRoomContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(RoomTitle, {\n        children: [\"Room \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackSection, {\n      children: aiFeedback.map((feedback, index) => /*#__PURE__*/_jsxDEV(FeedbackItem, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/img/${feedback.agent.toLowerCase()}.png`,\n            alt: feedback.agent,\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n              borderRadius: '50%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(FeedbackContent, {\n          children: [/*#__PURE__*/_jsxDEV(AgentName, {\n            children: feedback.agent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FeedbackText, {\n            children: feedback.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoGrid, {\n      children: [peers.map(peer => /*#__PURE__*/_jsxDEV(VideoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ParticipantVideo, {\n          autoPlay: true,\n          playsInline: true,\n          ref: video => {\n            if (video) video.srcObject = peer.stream;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParticipantName, {\n          children: peer.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this)]\n      }, peer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 11\n      }, this)), participants.filter(p => p.is_ai).map(aiParticipant => /*#__PURE__*/_jsxDEV(VideoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            width: '100%',\n            height: '100%',\n            borderRadius: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '36px'\n            },\n            children: aiParticipant.name[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParticipantName, {\n          children: aiParticipant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this)]\n      }, aiParticipant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(SelfVideoContainer, {\n        visible: videoEnabled,\n        children: [/*#__PURE__*/_jsxDEV(ParticipantVideo, {\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ParticipantName, {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlBar, {\n      children: [/*#__PURE__*/_jsxDEV(ChatButton, {\n        onClick: () => setShowChat(!showChat),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"chat\",\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        onClick: toggleAudio,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"microphone\",\n          children: audioEnabled ? '🎙️' : '🔇'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        onClick: toggleVideo,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"camera\",\n          children: videoEnabled ? '📹' : '🚫'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        danger: true,\n        onClick: leaveRoom,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"hang up\",\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), showChat && /*#__PURE__*/_jsxDEV(Chat, {\n      messages: messages,\n      onSendMessage: sendMessage,\n      onClose: () => setShowChat(false),\n      roomId: roomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 515,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoRoom, \"wcSE5EE/RydjPJ+TIefhNZW3wTI=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c18 = VideoRoom;\nexport default VideoRoom;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n$RefreshReg$(_c, \"VideoRoomContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"RoomTitle\");\n$RefreshReg$(_c4, \"FeedbackSection\");\n$RefreshReg$(_c5, \"FeedbackItem\");\n$RefreshReg$(_c6, \"Avatar\");\n$RefreshReg$(_c7, \"FeedbackContent\");\n$RefreshReg$(_c8, \"AgentName\");\n$RefreshReg$(_c9, \"FeedbackText\");\n$RefreshReg$(_c10, \"VideoGrid\");\n$RefreshReg$(_c11, \"VideoContainer\");\n$RefreshReg$(_c12, \"ParticipantVideo\");\n$RefreshReg$(_c13, \"ParticipantName\");\n$RefreshReg$(_c14, \"SelfVideoContainer\");\n$RefreshReg$(_c15, \"ControlBar\");\n$RefreshReg$(_c16, \"ControlButton\");\n$RefreshReg$(_c17, \"ChatButton\");\n$RefreshReg$(_c18, \"VideoRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useLocation","useNavigate","styled","Peer","axios","Chat","useSearchParams","jsxDEV","_jsxDEV","VideoRoomContainer","div","_c","Header","_c2","RoomTitle","h2","_c3","FeedbackSection","_c4","FeedbackItem","_c5","Avatar","_c6","AvatarImage","img","FeedbackContent","_c7","AgentName","_c8","FeedbackText","_c9","VideoGrid","_c10","VideoContainer","_c11","ParticipantVideo","video","_c12","ParticipantName","_c13","SelfVideoContainer","props","visible","_c14","ControlBar","_c15","ControlButton","button","danger","_c16","ChatButton","_c17","VideoRoom","_s","_location$state","roomId","location","navigate","aiPartners","setAiPartners","state","userName","setUserName","localStorage","getItem","peers","setPeers","participants","setParticipants","messages","setMessages","aiFeedback","setAiFeedback","showChat","setShowChat","videoEnabled","setVideoEnabled","audioEnabled","setAudioEnabled","userVideo","peersRef","socketRef","streamRef","current","WebSocket","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","joinRoom","setupWebSocket","fetchParticipants","fetchMessages","length","generateAIFeedback","catch","error","console","alert","getTracks","forEach","track","stop","close","peer","destroy","post","name","is_ai","agent","ai_agent","id","onopen","log","send","JSON","stringify","type","signal","caller_id","onmessage","event","data","parse","prevMessages","sender","content","message","message_type","prev","handleSignal","onerror","onclose","receiver_id","createPeer","push","peerId","addPeer","sdp","candidate","item","find","p","participantId","initiator","trickle","on","users","incomingSignal","response","get","initialFeedback","map","role","feedbackInterval","setInterval","randomAgent","Math","floor","random","feedback","generateRandomFeedback","readyState","OPEN","clearInterval","feedbackOptions","options","toggleVideo","getVideoTracks","enabled","toggleAudio","getAudioTracks","leaveRoom","sendMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","index","src","toLowerCase","alt","style","width","height","objectFit","borderRadius","autoPlay","playsInline","ref","filter","aiParticipant","fontSize","muted","onClick","onSendMessage","onClose","_c18","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/桌面/HCI+D/video_app/frontend/src/components/VideoRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Peer from 'simple-peer';\r\nimport axios from 'axios';\r\nimport Chat from './Chat';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst VideoRoomContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: center; // Center the room title\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid #e0e0e0;\r\n`;\r\n\r\nconst RoomTitle = styled.h2`\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst FeedbackSection = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 16px;\r\n  background-color: #fff;\r\n  border-bottom: 1px solid #e0e0e0;\r\n`;\r\n\r\nconst FeedbackItem = styled.div`\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 20px;\r\n  background-color: #e0e0e0;\r\n  margin-right: 12px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst AvatarImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst FeedbackContent = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst AgentName = styled.div`\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nconst FeedbackText = styled.div`\r\n  font-size: 14px;\r\n`;\r\n\r\nconst VideoGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 16px;\r\n  padding: 16px;\r\n  background-color: #f5f5f5;\r\n  flex: 1;\r\n  position: relative;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  position: relative;\r\n  aspect-ratio: 4/3;\r\n  background-color: #000;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ParticipantVideo = styled.video`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst ParticipantName = styled.div`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n`;\r\n\r\n// New styled component for self-video in bottom right\r\nconst SelfVideoContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 10px; // Position above control bar\r\n  right: 10px;\r\n  width: 180px; // Smaller size\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  aspect-ratio: 4/3;\r\n  background-color: #000;\r\n  z-index: 10;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  display: ${props => props.visible ? 'block' : 'none'}; // Hide when video is off\r\n`;\r\n\r\nconst ControlBar = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 16px;\r\n  background-color: #fff;\r\n  border-top: 1px solid #e0e0e0;\r\n`;\r\n\r\nconst ControlButton = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 20px;\r\n  margin: 0 8px;\r\n  background-color: ${props => props.danger ? '#ff4d4f' : '#f0f0f0'};\r\n  color: ${props => props.danger ? 'white' : 'black'};\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.danger ? '#ff7875' : '#d9d9d9'};\r\n  }\r\n`;\r\n\r\nconst ChatButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 20px;\r\n  background-color: #f0f0f0;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-right: 16px;\r\n  \r\n  &:hover {\r\n    background-color: #d9d9d9;\r\n  }\r\n`;\r\n\r\nconst VideoRoom = () => {\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [aiPartners, setAiPartners] = useState(location.state?.aiPartners || []);\r\n  const [userName, setUserName] = useState(localStorage.getItem('userName') || 'You');\r\n  const [peers, setPeers] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [aiFeedback, setAiFeedback] = useState([]);\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [videoEnabled, setVideoEnabled] = useState(true);\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  \r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const socketRef = useRef();\r\n  const streamRef = useRef();\r\n  \r\n  \r\n  useEffect(() => {\r\n    // Connect to the WebSocket\r\n    socketRef.current = new WebSocket(`ws://localhost:3000/ws/chat/${roomId}/`);\r\n    \r\n    // Get user media and set up connections\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        streamRef.current = stream;\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n        \r\n        // Join room\r\n        joinRoom();\r\n        \r\n        // Set up WebSocket handlers\r\n        setupWebSocket();\r\n        \r\n        // Get participants and messages\r\n        fetchParticipants();\r\n        fetchMessages();\r\n        \r\n        // Generate AI feedback\r\n        if (aiPartners.length > 0) {\r\n          generateAIFeedback();\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error accessing media devices:\", error);\r\n        alert(\"Could not access camera or microphone. Please check permissions.\");\r\n      });\r\n    \r\n    return () => {\r\n      // Clean up\r\n      if (streamRef.current) {\r\n        streamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n      if (socketRef.current) {\r\n        socketRef.current.close();\r\n      }\r\n      peersRef.current.forEach(peer => {\r\n        if (peer.peer) {\r\n          peer.peer.destroy();\r\n        }\r\n      });\r\n    };\r\n  }, [roomId]);\r\n  \r\n  const joinRoom = async () => {\r\n    try {\r\n      // Register participant in the room\r\n      await axios.post(`/api/rooms/${roomId}/join/`, {\r\n        name: userName,\r\n        is_ai: false\r\n      });\r\n      \r\n      // Register AI partners in the room\r\n      for (const agent of aiPartners) {\r\n        await axios.post(`/api/rooms/${roomId}/join/`, {\r\n          name: agent.name,\r\n          is_ai: true,\r\n          ai_agent: agent.id\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error joining room:\", error);\r\n    }\r\n  };\r\n  \r\n  const setupWebSocket = () => {\r\n    socketRef.current.onopen = () => {\r\n      console.log(\"WebSocket connection established\");\r\n      \r\n      // Signal to other participants that we've joined\r\n      socketRef.current.send(JSON.stringify({\r\n        type: 'signal',\r\n        signal: { type: 'new-participant' },\r\n        caller_id: userName\r\n      }));\r\n    };\r\n    \r\n    socketRef.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      \r\n      if (data.type === 'message') {\r\n        setMessages(prevMessages => [...prevMessages, {\r\n          sender: data.sender,\r\n          content: data.message,\r\n          is_ai: data.is_ai\r\n        }]);\r\n        \r\n        // If AI message contains feedback, add it to feedback section\r\n        if (data.is_ai && data.message_type === 'feedback') {\r\n          setAiFeedback(prev => [...prev, {\r\n            agent: data.sender,\r\n            content: data.message\r\n          }]);\r\n        }\r\n      } else if (data.type === 'signal') {\r\n        handleSignal(data);\r\n      }\r\n    };\r\n    \r\n    socketRef.current.onerror = (error) => {\r\n      console.error(\"WebSocket error:\", error);\r\n    };\r\n    \r\n    socketRef.current.onclose = () => {\r\n      console.log(\"WebSocket connection closed\");\r\n    };\r\n  };\r\n  \r\n  const handleSignal = (data) => {\r\n    const { signal, caller_id, receiver_id } = data;\r\n    \r\n    // If signal is for a new participant\r\n    if (signal.type === 'new-participant' && caller_id !== userName) {\r\n      const peer = createPeer(caller_id);\r\n      \r\n      peersRef.current.push({\r\n        peerId: caller_id,\r\n        peer: peer\r\n      });\r\n      \r\n      socketRef.current.send(JSON.stringify({\r\n        type: 'signal',\r\n        signal: { type: 'participant-ready' },\r\n        caller_id: userName,\r\n        receiver_id: caller_id\r\n      }));\r\n    }\r\n    \r\n    // If signal is from a participant who is ready to connect\r\n    else if (signal.type === 'participant-ready' && receiver_id === userName) {\r\n      const peer = addPeer(caller_id, signal);\r\n      \r\n      peersRef.current.push({\r\n        peerId: caller_id,\r\n        peer: peer\r\n      });\r\n    }\r\n    \r\n    // Handle WebRTC signaling\r\n    else if (signal.sdp || signal.candidate) {\r\n      const item = peersRef.current.find(p => p.peerId === caller_id);\r\n      if (item) {\r\n        item.peer.signal(signal);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const createPeer = (participantId) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream: streamRef.current\r\n    });\r\n    \r\n    peer.on('signal', signal => {\r\n      socketRef.current.send(JSON.stringify({\r\n        type: 'signal',\r\n        signal: signal,\r\n        caller_id: userName,\r\n        receiver_id: participantId\r\n      }));\r\n    });\r\n    \r\n    peer.on('stream', stream => {\r\n      setPeers(users => [...users, {\r\n        id: participantId,\r\n        stream: stream\r\n      }]);\r\n    });\r\n    \r\n    return peer;\r\n  };\r\n  \r\n  const addPeer = (participantId, incomingSignal) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream: streamRef.current\r\n    });\r\n    \r\n    peer.on('signal', signal => {\r\n      socketRef.current.send(JSON.stringify({\r\n        type: 'signal',\r\n        signal: signal,\r\n        caller_id: userName,\r\n        receiver_id: participantId\r\n      }));\r\n    });\r\n    \r\n    peer.on('stream', stream => {\r\n      setPeers(users => [...users, {\r\n        id: participantId,\r\n        stream: stream\r\n      }]);\r\n    });\r\n    \r\n    peer.signal(incomingSignal);\r\n    \r\n    return peer;\r\n  };\r\n  \r\n  const fetchParticipants = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/rooms/${roomId}/participants/`);\r\n      setParticipants(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching participants:\", error);\r\n    }\r\n  };\r\n  \r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/rooms/${roomId}/messages/`);\r\n      setMessages(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  };\r\n  \r\n  const generateAIFeedback = () => {\r\n    // Simulated AI feedback for demonstration\r\n    // In a real application, this would come from an AI service\r\n    const initialFeedback = aiPartners.map(agent => ({\r\n      agent: agent.name,\r\n      content: `Hello, I'm ${agent.name}, your ${agent.role} AI assistant. I'm here to help with the meeting.`\r\n    }));\r\n    \r\n    setAiFeedback(initialFeedback);\r\n    \r\n    // Simulate AI sending periodic feedback\r\n    const feedbackInterval = setInterval(() => {\r\n      const randomAgent = aiPartners[Math.floor(Math.random() * aiPartners.length)];\r\n      if (randomAgent) {\r\n        const feedback = {\r\n          agent: randomAgent.name,\r\n          content: generateRandomFeedback(randomAgent.role)\r\n        };\r\n        \r\n        setAiFeedback(prev => [...prev, feedback]);\r\n        \r\n        // Also send to chat\r\n        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n          socketRef.current.send(JSON.stringify({\r\n            type: 'message',\r\n            message: feedback.content,\r\n            sender: feedback.agent,\r\n            is_ai: true,\r\n            message_type: 'feedback'\r\n          }));\r\n        }\r\n      }\r\n    }, 15000); // Every 15 seconds\r\n    \r\n    return () => clearInterval(feedbackInterval);\r\n  };\r\n  \r\n  const generateRandomFeedback = (role) => {\r\n    const feedbackOptions = {\r\n      'Designer': [\r\n        \"I notice the UI elements could be more consistent. Consider a unified color scheme.\",\r\n        \"The user flow seems to have some friction points. We should simplify the navigation.\",\r\n        \"Visual hierarchy could be improved to guide users more effectively.\",\r\n        \"Have you considered accessibility in this design? Some elements may need better contrast.\"\r\n      ],\r\n      'Engineer': [\r\n        \"The current architecture might have scaling issues with high user loads.\",\r\n        \"We should consider optimizing the database queries for better performance.\",\r\n        \"This would be a good opportunity to implement caching to reduce server load.\",\r\n        \"The current solution works, but we might want to refactor for better maintainability.\"\r\n      ],\r\n      'Finance': [\r\n        \"Based on our projections, we should allocate more resources to marketing.\",\r\n        \"The ROI on this feature seems promising based on current metrics.\",\r\n        \"We need to consider the cost implications of this infrastructure change.\",\r\n        \"From a financial perspective, we should prioritize features with higher revenue potential.\"\r\n      ],\r\n      'Professor': [\r\n        \"This approach aligns with recent research in the field.\",\r\n        \"Consider the theoretical implications of this decision framework.\",\r\n        \"We should examine some case studies that have implemented similar solutions.\",\r\n        \"The methodology needs more rigorous validation before proceeding.\"\r\n      ]\r\n    };\r\n    \r\n    const options = feedbackOptions[role] || [\"I have some insights to share about this discussion.\"];\r\n    return options[Math.floor(Math.random() * options.length)];\r\n  };\r\n  \r\n  const toggleVideo = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getVideoTracks().forEach(track => {\r\n        track.enabled = !videoEnabled;\r\n      });\r\n      setVideoEnabled(!videoEnabled);\r\n    }\r\n  };\r\n  \r\n  const toggleAudio = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getAudioTracks().forEach(track => {\r\n        track.enabled = !audioEnabled;\r\n      });\r\n      setAudioEnabled(!audioEnabled);\r\n    }\r\n  };\r\n  \r\n  const leaveRoom = () => {\r\n    navigate('/'); // Navigate to home page\r\n  };\r\n  \r\n  const sendMessage = (message) => {\r\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n      socketRef.current.send(JSON.stringify({\r\n        type: 'message',\r\n        message: message,\r\n        sender: userName,\r\n        is_ai: false\r\n      }));\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <VideoRoomContainer>\r\n      <Header>\r\n        <RoomTitle>Room {roomId}</RoomTitle>\r\n      </Header>\r\n      \r\n      <FeedbackSection>\r\n        {aiFeedback.map((feedback, index) => (\r\n          <FeedbackItem key={index}>\r\n           <Avatar>\r\n  <img \r\n    src={`/img/${feedback.agent.toLowerCase()}.png`} \r\n    alt={feedback.agent} \r\n    style={{ width: '100%', height: '100%', objectFit: 'cover', borderRadius: '50%' }} \r\n  />\r\n</Avatar>\r\n\r\n            <FeedbackContent>\r\n              <AgentName>{feedback.agent}</AgentName>\r\n              <FeedbackText>{feedback.content}</FeedbackText>\r\n            </FeedbackContent>\r\n          </FeedbackItem>\r\n        ))}\r\n      </FeedbackSection>\r\n      \r\n      <VideoGrid>\r\n        {peers.map((peer) => (\r\n          <VideoContainer key={peer.id}>\r\n            <ParticipantVideo\r\n              autoPlay\r\n              playsInline\r\n              ref={(video) => {\r\n                if (video) video.srcObject = peer.stream;\r\n              }}\r\n            />\r\n            <ParticipantName>{peer.id}</ParticipantName>\r\n          </VideoContainer>\r\n        ))}\r\n        \r\n        {participants.filter(p => p.is_ai).map((aiParticipant) => (\r\n          <VideoContainer key={aiParticipant.id}>\r\n            <Avatar style={{ width: '100%', height: '100%', borderRadius: 0 }}>\r\n              <span style={{ fontSize: '36px' }}>{aiParticipant.name[0]}</span>\r\n            </Avatar>\r\n            <ParticipantName>{aiParticipant.name}</ParticipantName>\r\n          </VideoContainer>\r\n        ))}\r\n        \r\n        {/* Self video in bottom right corner */}\r\n        <SelfVideoContainer visible={videoEnabled}>\r\n          <ParticipantVideo \r\n            ref={userVideo} \r\n            autoPlay \r\n            playsInline \r\n            muted\r\n          />\r\n          <ParticipantName>{userName}</ParticipantName>\r\n        </SelfVideoContainer>\r\n      </VideoGrid>\r\n      \r\n      <ControlBar>\r\n        <ChatButton onClick={() => setShowChat(!showChat)}>\r\n          <span role=\"img\" aria-label=\"chat\">💬</span>\r\n        </ChatButton>\r\n        \r\n        <ControlButton onClick={toggleAudio}>\r\n          <span role=\"img\" aria-label=\"microphone\">\r\n            {audioEnabled ? '🎙️' : '🔇'}\r\n          </span>\r\n        </ControlButton>\r\n        \r\n        <ControlButton onClick={toggleVideo}>\r\n          <span role=\"img\" aria-label=\"camera\">\r\n            {videoEnabled ? '📹' : '🚫'}\r\n          </span>\r\n        </ControlButton>\r\n        \r\n        <ControlButton danger onClick={leaveRoom}>\r\n          <span role=\"img\" aria-label=\"hang up\">❌</span>\r\n        </ControlButton>\r\n      </ControlBar>\r\n      \r\n      {showChat && (\r\n        <Chat \r\n          messages={messages} \r\n          onSendMessage={sendMessage} \r\n          onClose={() => setShowChat(false)}\r\n          roomId={roomId}\r\n        />\r\n      )}\r\n    </VideoRoomContainer>\r\n  );\r\n};\r\n\r\nexport default VideoRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}