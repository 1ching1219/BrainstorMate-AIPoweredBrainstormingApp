{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u684C\\u9762\\\\HCI+D\\\\video_app\\\\frontend\\\\src\\\\components\\\\VideoRoom.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Peer from 'simple-peer';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:5000');\nconst VideoRoom = ({\n  roomID\n}) => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [aiPartners, setAIPartners] = useState([]);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socket.emit('join room', roomID);\n      socket.on('all users', users => {\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, socket.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n      socket.on('user joined', payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socket.on('receiving returned signal', payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  // ✅ AI feedback 每60秒觸發\n  useEffect(() => {\n    if (aiPartners.length > 0) {\n      const interval = setInterval(() => {\n        generateAIFeedback();\n      }, 60000); // 每 60 秒\n\n      return () => clearInterval(interval);\n    }\n  }, [aiPartners]);\n  const generateAIFeedback = () => {\n    console.log('AI Feedback generated at', new Date().toLocaleTimeString());\n    // 這裡可以加上實際的AI處理邏輯，例如呼叫API\n  };\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('sending signal', {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('returning signal', {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      muted: true,\n      ref: userVideo,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), peers.map((peer, index) => /*#__PURE__*/_jsxDEV(Video, {\n      peer: peer\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoRoom, \"dSPmjqPz9S8XoXa84pW+OWmXHVc=\");\n_c = VideoRoom;\nconst Video = ({\n  peer\n}) => {\n  _s2();\n  const ref = useRef();\n  useEffect(() => {\n    peer.on('stream', stream => {\n      ref.current.srcObject = stream;\n    });\n  }, [peer]);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: ref,\n    autoPlay: true,\n    playsInline: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s2(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c2 = Video;\nexport default VideoRoom;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoRoom\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Peer","io","jsxDEV","_jsxDEV","socket","connect","VideoRoom","roomID","_s","peers","setPeers","aiPartners","setAIPartners","userVideo","peersRef","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","on","users","forEach","userID","peer","createPeer","id","push","peerID","payload","addPeer","signal","callerID","item","find","p","length","interval","setInterval","generateAIFeedback","clearInterval","console","log","Date","toLocaleTimeString","userToSignal","initiator","trickle","incomingSignal","children","muted","ref","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Video","_c","_s2","_c2","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/桌面/HCI+D/video_app/frontend/src/components/VideoRoom.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Peer from 'simple-peer';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io.connect('http://localhost:5000');\r\n\r\nconst VideoRoom = ({ roomID }) => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [aiPartners, setAIPartners] = useState([]);\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      userVideo.current.srcObject = stream;\r\n\r\n      socket.emit('join room', roomID);\r\n\r\n      socket.on('all users', users => {\r\n        const peers = [];\r\n        users.forEach(userID => {\r\n          const peer = createPeer(userID, socket.id, stream);\r\n          peersRef.current.push({ peerID: userID, peer });\r\n          peers.push(peer);\r\n        });\r\n        setPeers(peers);\r\n      });\r\n\r\n      socket.on('user joined', payload => {\r\n        const peer = addPeer(payload.signal, payload.callerID, stream);\r\n        peersRef.current.push({ peerID: payload.callerID, peer });\r\n\r\n        setPeers(users => [...users, peer]);\r\n      });\r\n\r\n      socket.on('receiving returned signal', payload => {\r\n        const item = peersRef.current.find(p => p.peerID === payload.id);\r\n        item.peer.signal(payload.signal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  // ✅ AI feedback 每60秒觸發\r\n  useEffect(() => {\r\n    if (aiPartners.length > 0) {\r\n      const interval = setInterval(() => {\r\n        generateAIFeedback();\r\n      }, 60000); // 每 60 秒\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [aiPartners]);\r\n\r\n  const generateAIFeedback = () => {\r\n    console.log('AI Feedback generated at', new Date().toLocaleTimeString());\r\n    // 這裡可以加上實際的AI處理邏輯，例如呼叫API\r\n  };\r\n\r\n  function createPeer(userToSignal, callerID, stream) {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n    peer.on('signal', signal => {\r\n      socket.emit('sending signal', { userToSignal, callerID, signal });\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerID, stream) {\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n    peer.on('signal', signal => {\r\n      socket.emit('returning signal', { signal, callerID });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <video muted ref={userVideo} autoPlay playsInline />\r\n      {peers.map((peer, index) => (\r\n        <Video key={index} peer={peer} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Video = ({ peer }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    peer.on('stream', stream => {\r\n      ref.current.srcObject = stream;\r\n    });\r\n  }, [peer]);\r\n\r\n  return <video ref={ref} autoPlay playsInline />;\r\n};\r\n\r\nexport default VideoRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}