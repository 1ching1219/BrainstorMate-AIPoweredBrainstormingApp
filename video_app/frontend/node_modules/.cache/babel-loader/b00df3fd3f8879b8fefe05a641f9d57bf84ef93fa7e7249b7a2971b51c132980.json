{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u684C\\u9762\\\\HCI+D\\\\video_app\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  width: 350px;\n  height: 650px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  z-index: 100;\n`;\n_c = ChatContainer;\nconst ChatHeader = styled.div`\n  padding: 10px;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #e0e0e0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c2 = ChatHeader;\nconst StatusIndicator = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 50%;\n  display: inline-block;\n  margin-right: 5px;\n  background-color: ${props => props.connected ? 'green' : 'red'};\n`;\n_c3 = StatusIndicator;\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 18px;\n  cursor: pointer;\n`;\n_c4 = CloseButton;\nconst MessagesContainer = styled.div`\n  flex: 1;\n  padding: 10px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c5 = MessagesContainer;\nconst Message = styled.div`\n  padding: 8px 12px;\n  border-radius: 15px;\n  max-width: 70%;\n  word-break: break-word;\n  \n  background-color: ${props => props.isFromUser ? '#dcf8c6' : '#f0f0f0'};\n  align-self: ${props => props.isFromUser ? 'flex-end' : 'flex-start'};\n`;\n_c6 = Message;\nconst MessageSender = styled.div`\n  font-size: 12px;\n  margin-bottom: 2px;\n  color: #666;\n`;\n_c7 = MessageSender;\nconst InputArea = styled.div`\n  display: flex;\n  padding: 10px;\n  border-top: 1px solid #e0e0e0;\n`;\n_c8 = InputArea;\nconst Input = styled.input`\n  flex: 1;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 20px;\n  outline: none;\n`;\n_c9 = Input;\nconst SendButton = styled.button`\n  margin-left: 10px;\n  background: none;\n  border: none;\n  font-size: 20px;\n  cursor: pointer;\n  opacity: ${props => props.disabled ? 0.5 : 1};\n`;\n_c10 = SendButton;\nconst SystemMessage = styled.div`\n  padding: 5px 10px;\n  text-align: center;\n  color: #666;\n  font-size: 12px;\n  margin: 5px 0;\n`;\n_c11 = SystemMessage;\nconst Chat = ({\n  roomId,\n  socket: initialSocket,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [socket, setSocket] = useState(initialSocket);\n  const [isConnected, setIsConnected] = useState(!!initialSocket && initialSocket.readyState === WebSocket.OPEN);\n  const [currentUser, setCurrentUser] = useState('');\n  const messagesEndRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const reconnectAttempts = useRef(0);\n  const maxReconnectAttempts = 5;\n\n  // 獲取當前用戶資訊\n  useEffect(() => {\n    // 從localStorage獲取用戶名\n    const username = localStorage.getItem('username');\n    if (username) {\n      setCurrentUser(username);\n      console.log('Current user:', username);\n    } else {\n      console.warn('Username not found');\n      // 可能需要處理未登入的情況\n    }\n  }, []);\n\n  // 創建或重新連接WebSocket\n  const connectWebSocket = () => {\n    if (reconnectAttempts.current >= maxReconnectAttempts) {\n      setMessages(prev => [...prev, {\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        content: \"Unable to connect to server. Please refresh the page and try again.\",\n        is_system: true,\n        created_at: new Date().toISOString()\n      }]);\n      return;\n    }\n\n    // 清除任何現有的重連超時\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n    }\n\n    // 關閉現有的WebSocket連接\n    if (socket && socket.readyState !== WebSocket.CLOSED) {\n      socket.close();\n    }\n\n    // 創建新的WebSocket連接\n    try {\n      const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n      const wsUrl = `${protocol}//${window.location.host}/ws/chat/${roomId}/`;\n      console.log(`Attempting to connect to ${wsUrl}`);\n      const newSocket = new WebSocket(wsUrl);\n      newSocket.onopen = () => {\n        console.log('WebSocket connection opened');\n        setIsConnected(true);\n        reconnectAttempts.current = 0;\n        setMessages(prev => [...prev, {\n          id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n          content: \"Connected to chat server\",\n          is_system: true,\n          created_at: new Date().toISOString()\n        }]);\n      };\n      newSocket.onclose = () => {\n        console.log('WebSocket connection closed');\n        setIsConnected(false);\n\n        // 計劃重新連接\n        const delay = Math.min(1000 * Math.pow(2, reconnectAttempts.current), 30000);\n        reconnectAttempts.current++;\n        setMessages(prev => [...prev, {\n          id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n          content: `Connection lost. Attempting to reconnect (${reconnectAttempts.current}/${maxReconnectAttempts})...`,\n          is_system: true,\n          created_at: new Date().toISOString()\n        }]);\n        reconnectTimeoutRef.current = setTimeout(connectWebSocket, delay);\n      };\n      newSocket.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n      setSocket(newSocket);\n    } catch (error) {\n      console.error('Error creating WebSocket connection:', error);\n\n      // 如果連接失敗，嘗試重新連接\n      const delay = Math.min(1000 * Math.pow(2, reconnectAttempts.current), 30000);\n      reconnectAttempts.current++;\n      reconnectTimeoutRef.current = setTimeout(connectWebSocket, delay);\n    }\n  };\n\n  // 初始設置和清理\n  useEffect(() => {\n    if (!roomId) {\n      console.log(\"Invalid roomId\");\n      return;\n    }\n\n    // 如果沒有提供socket或者socket已關閉，則創建新的連接\n    if (!initialSocket || initialSocket.readyState !== WebSocket.OPEN) {\n      connectWebSocket();\n    } else {\n      setSocket(initialSocket);\n      setIsConnected(true);\n    }\n\n    // 清理函數\n    return () => {\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      // 不要在這裡關閉socket，因為它可能正在其他組件中使用\n    };\n  }, [roomId, initialSocket]);\n\n  // 檢查socket狀態\n  useEffect(() => {\n    if (socket) {\n      setIsConnected(socket.readyState === WebSocket.OPEN);\n    } else {\n      setIsConnected(false);\n    }\n  }, [socket]);\n\n  // 消息處理\n  useEffect(() => {\n    if (!socket) {\n      return;\n    }\n    const messageHandler = event => {\n      console.log(\"Received event:\", event.data);\n      try {\n        const data = JSON.parse(event.data);\n        if (data.type === 'message') {\n          setMessages(prev => [...prev, {\n            id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n            sender: data.sender,\n            content: data.message,\n            is_ai: data.is_ai,\n            created_at: new Date().toISOString()\n          }]);\n        }\n      } catch (error) {\n        console.error('Error parsing message:', error);\n      }\n    };\n    socket.addEventListener('message', messageHandler);\n    return () => {\n      socket.removeEventListener('message', messageHandler);\n    };\n  }, [socket]);\n\n  // 獲取歷史消息\n  useEffect(() => {\n    if (!roomId) {\n      return;\n    }\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`/api/rooms/${roomId}/messages/`);\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [roomId]);\n\n  // 滾動到底部\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // 發送消息\n  const sendMessage = () => {\n    if (!inputMessage.trim()) {\n      return;\n    }\n    if (!socket || socket.readyState !== WebSocket.OPEN) {\n      setMessages(prev => [...prev, {\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        content: \"Unable to send message: Not connected to server\",\n        is_system: true,\n        created_at: new Date().toISOString()\n      }]);\n\n      // 嘗試重新連接\n      connectWebSocket();\n      return;\n    }\n\n    // 確保我們有用戶名\n    const username = currentUser || localStorage.getItem('username');\n    if (!username) {\n      console.error('Cannot send message: Username not found');\n      return;\n    }\n    try {\n      socket.send(JSON.stringify({\n        type: 'message',\n        message: inputMessage,\n        sender: username,\n        is_ai: false,\n        message_type: 'chat'\n      }));\n      setInputMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prev => [...prev, {\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        content: \"Failed to send message\",\n        is_system: true,\n        created_at: new Date().toISOString()\n      }]);\n\n      // 如果發送失敗，嘗試重新連接\n      connectWebSocket();\n    }\n  };\n\n  // 處理Enter鍵按下\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  // 檢查消息是否來自當前用戶\n  const isMessageFromCurrentUser = messageSender => {\n    return messageSender === currentUser;\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(StatusIndicator, {\n          connected: isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Chat (\", currentUser, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessagesContainer, {\n      children: [messages.map((message, index) => {\n        // 處理系統消息\n        if (message.is_system) {\n          return /*#__PURE__*/_jsxDEV(SystemMessage, {\n            children: message.content\n          }, message.id || index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 20\n          }, this);\n        }\n\n        // 確定消息是否來自當前用戶\n        const isFromUser = isMessageFromCurrentUser(message.sender);\n        return /*#__PURE__*/_jsxDEV(Message, {\n          isFromUser: isFromUser,\n          children: [!isFromUser && /*#__PURE__*/_jsxDEV(MessageSender, {\n            children: message.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 31\n          }, this), message.content]\n        }, message.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputArea, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type a message...\",\n        disabled: !isConnected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n        onClick: sendMessage,\n        disabled: !isConnected || !inputMessage.trim(),\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"Hw4AKoO5LyYT+j4a1iwpGOPWxMY=\");\n_c12 = Chat;\nexport default Chat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"StatusIndicator\");\n$RefreshReg$(_c4, \"CloseButton\");\n$RefreshReg$(_c5, \"MessagesContainer\");\n$RefreshReg$(_c6, \"Message\");\n$RefreshReg$(_c7, \"MessageSender\");\n$RefreshReg$(_c8, \"InputArea\");\n$RefreshReg$(_c9, \"Input\");\n$RefreshReg$(_c10, \"SendButton\");\n$RefreshReg$(_c11, \"SystemMessage\");\n$RefreshReg$(_c12, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxDEV","_jsxDEV","ChatContainer","div","_c","ChatHeader","_c2","StatusIndicator","span","props","connected","_c3","CloseButton","button","_c4","MessagesContainer","_c5","Message","isFromUser","_c6","MessageSender","_c7","InputArea","_c8","Input","input","_c9","SendButton","disabled","_c10","SystemMessage","_c11","Chat","roomId","socket","initialSocket","onClose","_s","messages","setMessages","inputMessage","setInputMessage","setSocket","isConnected","setIsConnected","readyState","WebSocket","OPEN","currentUser","setCurrentUser","messagesEndRef","reconnectTimeoutRef","reconnectAttempts","maxReconnectAttempts","username","localStorage","getItem","console","log","warn","connectWebSocket","current","prev","id","Date","now","Math","random","toString","substr","content","is_system","created_at","toISOString","clearTimeout","CLOSED","close","protocol","window","location","wsUrl","host","newSocket","onopen","onclose","delay","min","pow","setTimeout","onerror","error","messageHandler","event","data","JSON","parse","type","sender","message","is_ai","addEventListener","removeEventListener","fetchMessages","response","get","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","sendMessage","trim","send","stringify","message_type","handleKeyPress","e","key","isMessageFromCurrentUser","messageSender","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","ref","value","onChange","target","onKeyPress","placeholder","_c12","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/桌面/HCI+D/video_app/frontend/src/components/Chat.js"],"sourcesContent":["\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst ChatContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  width: 350px;\r\n  height: 650px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  z-index: 100;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  padding: 10px;\r\n  background-color: #f5f5f5;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst StatusIndicator = styled.span`\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n  background-color: ${props => props.connected ? 'green' : 'red'};\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst MessagesContainer = styled.div`\r\n  flex: 1;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  padding: 8px 12px;\r\n  border-radius: 15px;\r\n  max-width: 70%;\r\n  word-break: break-word;\r\n  \r\n  background-color: ${props => props.isFromUser ? '#dcf8c6' : '#f0f0f0'};\r\n  align-self: ${props => props.isFromUser ? 'flex-end' : 'flex-start'};\r\n`;\r\n\r\nconst MessageSender = styled.div`\r\n  font-size: 12px;\r\n  margin-bottom: 2px;\r\n  color: #666;\r\n`;\r\n\r\nconst InputArea = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  border-top: 1px solid #e0e0e0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 20px;\r\n  outline: none;\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n  margin-left: 10px;\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  opacity: ${props => props.disabled ? 0.5 : 1};\r\n`;\r\n\r\nconst SystemMessage = styled.div`\r\n  padding: 5px 10px;\r\n  text-align: center;\r\n  color: #666;\r\n  font-size: 12px;\r\n  margin: 5px 0;\r\n`;\r\n\r\nconst Chat = ({ roomId, socket: initialSocket, onClose }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [socket, setSocket] = useState(initialSocket);\r\n  const [isConnected, setIsConnected] = useState(!!initialSocket && initialSocket.readyState === WebSocket.OPEN);\r\n  const [currentUser, setCurrentUser] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  const reconnectTimeoutRef = useRef(null);\r\n  const reconnectAttempts = useRef(0);\r\n  const maxReconnectAttempts = 5;\r\n\r\n  // 獲取當前用戶資訊\r\n  useEffect(() => {\r\n    // 從localStorage獲取用戶名\r\n    const username = localStorage.getItem('username');\r\n    if (username) {\r\n      setCurrentUser(username);\r\n      console.log('Current user:', username);\r\n    } else {\r\n      console.warn('Username not found');\r\n      // 可能需要處理未登入的情況\r\n    }\r\n  }, []);\r\n\r\n  // 創建或重新連接WebSocket\r\n  const connectWebSocket = () => {\r\n    if (reconnectAttempts.current >= maxReconnectAttempts) {\r\n      setMessages(prev => [...prev, {\r\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        content: \"Unable to connect to server. Please refresh the page and try again.\",\r\n        is_system: true,\r\n        created_at: new Date().toISOString()\r\n      }]);\r\n      return;\r\n    }\r\n\r\n    // 清除任何現有的重連超時\r\n    if (reconnectTimeoutRef.current) {\r\n      clearTimeout(reconnectTimeoutRef.current);\r\n    }\r\n\r\n    // 關閉現有的WebSocket連接\r\n    if (socket && socket.readyState !== WebSocket.CLOSED) {\r\n      socket.close();\r\n    }\r\n\r\n    // 創建新的WebSocket連接\r\n    try {\r\n      const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\r\n      const wsUrl = `${protocol}//${window.location.host}/ws/chat/${roomId}/`;\r\n      console.log(`Attempting to connect to ${wsUrl}`);\r\n      \r\n      const newSocket = new WebSocket(wsUrl);\r\n      \r\n      newSocket.onopen = () => {\r\n        console.log('WebSocket connection opened');\r\n        setIsConnected(true);\r\n        reconnectAttempts.current = 0;\r\n        setMessages(prev => [...prev, {\r\n          id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n          content: \"Connected to chat server\",\r\n          is_system: true,\r\n          created_at: new Date().toISOString()\r\n        }]);\r\n      };\r\n      \r\n      newSocket.onclose = () => {\r\n        console.log('WebSocket connection closed');\r\n        setIsConnected(false);\r\n        \r\n        // 計劃重新連接\r\n        const delay = Math.min(1000 * Math.pow(2, reconnectAttempts.current), 30000);\r\n        reconnectAttempts.current++;\r\n        \r\n        setMessages(prev => [...prev, {\r\n          id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n          content: `Connection lost. Attempting to reconnect (${reconnectAttempts.current}/${maxReconnectAttempts})...`,\r\n          is_system: true,\r\n          created_at: new Date().toISOString()\r\n        }]);\r\n        \r\n        reconnectTimeoutRef.current = setTimeout(connectWebSocket, delay);\r\n      };\r\n      \r\n      newSocket.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n      };\r\n      \r\n      setSocket(newSocket);\r\n    } catch (error) {\r\n      console.error('Error creating WebSocket connection:', error);\r\n      \r\n      // 如果連接失敗，嘗試重新連接\r\n      const delay = Math.min(1000 * Math.pow(2, reconnectAttempts.current), 30000);\r\n      reconnectAttempts.current++;\r\n      reconnectTimeoutRef.current = setTimeout(connectWebSocket, delay);\r\n    }\r\n  };\r\n\r\n  // 初始設置和清理\r\n  useEffect(() => {\r\n    if (!roomId) {\r\n      console.log(\"Invalid roomId\");\r\n      return;\r\n    }\r\n\r\n    // 如果沒有提供socket或者socket已關閉，則創建新的連接\r\n    if (!initialSocket || initialSocket.readyState !== WebSocket.OPEN) {\r\n      connectWebSocket();\r\n    } else {\r\n      setSocket(initialSocket);\r\n      setIsConnected(true);\r\n    }\r\n\r\n    // 清理函數\r\n    return () => {\r\n      if (reconnectTimeoutRef.current) {\r\n        clearTimeout(reconnectTimeoutRef.current);\r\n      }\r\n      // 不要在這裡關閉socket，因為它可能正在其他組件中使用\r\n    };\r\n  }, [roomId, initialSocket]);\r\n\r\n  // 檢查socket狀態\r\n  useEffect(() => {\r\n    if (socket) {\r\n      setIsConnected(socket.readyState === WebSocket.OPEN);\r\n    } else {\r\n      setIsConnected(false);\r\n    }\r\n  }, [socket]);\r\n\r\n  // 消息處理\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      return;\r\n    }\r\n\r\n    const messageHandler = (event) => {\r\n      console.log(\"Received event:\", event.data);\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        if (data.type === 'message') {\r\n          setMessages((prev) => [\r\n            ...prev,\r\n            {\r\n              id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n              sender: data.sender,\r\n              content: data.message,\r\n              is_ai: data.is_ai,\r\n              created_at: new Date().toISOString(),\r\n            },\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing message:', error);\r\n      }\r\n    };\r\n\r\n    socket.addEventListener('message', messageHandler);\r\n\r\n    return () => {\r\n      socket.removeEventListener('message', messageHandler);\r\n    };\r\n  }, [socket]);\r\n\r\n  // 獲取歷史消息\r\n  useEffect(() => {\r\n    if (!roomId) {\r\n      return;\r\n    }\r\n\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/rooms/${roomId}/messages/`);\r\n        setMessages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [roomId]);\r\n\r\n  // 滾動到底部\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // 發送消息\r\n  const sendMessage = () => {\r\n    if (!inputMessage.trim()) {\r\n      return;\r\n    }\r\n\r\n    if (!socket || socket.readyState !== WebSocket.OPEN) {\r\n      setMessages(prev => [...prev, {\r\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        content: \"Unable to send message: Not connected to server\",\r\n        is_system: true,\r\n        created_at: new Date().toISOString()\r\n      }]);\r\n      \r\n      // 嘗試重新連接\r\n      connectWebSocket();\r\n      return;\r\n    }\r\n\r\n    // 確保我們有用戶名\r\n    const username = currentUser || localStorage.getItem('username');\r\n    if (!username) {\r\n      console.error('Cannot send message: Username not found');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      socket.send(JSON.stringify({\r\n        type: 'message',\r\n        message: inputMessage,\r\n        sender: username,\r\n        is_ai: false,\r\n        message_type: 'chat'\r\n      }));\r\n      \r\n      setInputMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      setMessages(prev => [...prev, {\r\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        content: \"Failed to send message\",\r\n        is_system: true,\r\n        created_at: new Date().toISOString()\r\n      }]);\r\n      \r\n      // 如果發送失敗，嘗試重新連接\r\n      connectWebSocket();\r\n    }\r\n  };\r\n\r\n  // 處理Enter鍵按下\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  // 檢查消息是否來自當前用戶\r\n  const isMessageFromCurrentUser = (messageSender) => {\r\n    return messageSender === currentUser;\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ChatHeader>\r\n        <div>\r\n          <StatusIndicator connected={isConnected} />\r\n          <span>Chat ({currentUser})</span>\r\n        </div>\r\n        <CloseButton onClick={onClose}>×</CloseButton>\r\n      </ChatHeader>\r\n      \r\n      <MessagesContainer>\r\n        {messages.map((message, index) => {\r\n          // 處理系統消息\r\n          if (message.is_system) {\r\n            return <SystemMessage key={message.id || index}>{message.content}</SystemMessage>;\r\n          }\r\n          \r\n          // 確定消息是否來自當前用戶\r\n          const isFromUser = isMessageFromCurrentUser(message.sender);\r\n          \r\n          return (\r\n            <Message key={message.id || index} isFromUser={isFromUser}>\r\n              {!isFromUser && <MessageSender>{message.sender}</MessageSender>}\r\n              {message.content}\r\n            </Message>\r\n          );\r\n        })}\r\n        <div ref={messagesEndRef} />\r\n      </MessagesContainer>\r\n      \r\n      <InputArea>\r\n        <Input\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Type a message...\"\r\n          disabled={!isConnected}\r\n        />\r\n        <SendButton onClick={sendMessage} disabled={!isConnected || !inputMessage.trim()}>➤</SendButton>\r\n      </InputArea>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}