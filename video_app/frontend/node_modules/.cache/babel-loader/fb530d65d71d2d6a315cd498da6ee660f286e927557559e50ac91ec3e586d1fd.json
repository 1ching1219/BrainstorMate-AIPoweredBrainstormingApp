{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u684C\\u9762\\\\HCI+D\\\\video_app\\\\frontend\\\\src\\\\components\\\\SelectAIPartners.js\",\n  _s = $RefreshSig$();\n// // frontend/src/components/SelectAIPartners.js\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import axios from 'axios';\n// import styled from 'styled-components';\n\n// const Container = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 12px;\n//   height: 100vh;\n// `;\n\n// const Header = styled.div`\n//   display: flex;\n//   align-items: center;\n//   margin-bottom: 24px;\n// `;\n\n// const BackButton = styled.button`\n//   background: none;\n//   border: none;\n//   font-size: 20px;\n//   cursor: pointer;\n// `;\n\n// const Title = styled.h1`\n//   font-size: 24px;\n//   margin-left: 12px;\n// `;\n\n// const AIGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(2, 1fr); /* 2 columns for smaller screen */\n//   gap: 16px;\n//   margin-bottom: 24px;\n// `;\n\n// const AIOption = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   cursor: pointer;\n//   padding: 5px;\n//   border-radius: 10px;\n// `;\n\n// const AIAvatar = styled.div`\n//   width: 80px;\n//   height: 80px;\n//   background-color: #e0e0e0;\n//   border-radius: 10px;\n//   margin-bottom: 8px;\n//   overflow: hidden;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   border: ${props => props.selected ? '3px solid rgb(197, 152, 54)' : 'none'};\n// `;\n\n// const AIImage = styled.img`\n//   width: 100%;\n//   height: 100%;\n//   object-fit: cover;\n// `;\n\n// const AIRole = styled.div`\n//   font-size: 14px;\n//   font-weight: bold;\n//   text-align: center;\n// `;\n\n// const AddButton = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   width: 80px;\n//   height: 80px;\n//   background-color: #f0f0f0;\n//   border: 2px dashed #aaa;\n//   border-radius: 10px;\n//   cursor: pointer;\n//   font-size: 24px;\n// `;\n\n// const StartButton = styled.button`\n//   padding: 12px 24px;\n//   font-size: 16px;\n//   background-color: #e0e0e0;\n//   border: none;\n//   border-radius: 24px;\n//   cursor: pointer;\n//   align-self: center;\n//   margin-top: auto;\n\n//   &:hover {\n//     background-color: #d0d0d0;\n//   }\n// `;\n\n// const SelectAIPartners = () => {\n//   const [aiAgents, setAiAgents] = useState([\n//     { id: 1, role: 'Designer', avatar: '/img/designer.png' },\n//     { id: 2, role: 'Engineer', avatar: '/img/engineer.png' },\n//     { id: 3, role: 'Finance', avatar: '/img/finance.png' },\n//     { id: 4, role: 'Professor', avatar: '/img/professor.png' }\n//   ]);\n//   const [selectedAgents, setSelectedAgents] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const navigate = useNavigate();\n//   const location = useLocation();\n// //   const params = new URLSearchParams(location.search);\n// //   const roomId = params.get('roomId');\n//     const roomId = location.state?.roomId;\n\n//   useEffect(() => {\n//     // Fetch AI agents from backend\n//     const fetchAIAgents = async () => {\n//       try {\n//         const response = await axios.get('/api/ai-agents/');\n//         if (response.data.length > 0) {\n//           setAiAgents(response.data);\n//         }\n//       } catch (error) {\n//         console.error('Error fetching AI agents:', error);\n//       }\n//     };\n\n//     fetchAIAgents();\n//   }, []);\n\n//   const toggleAgent = (agent) => {\n//     if (selectedAgents.find(a => a.id === agent.id)) {\n//       setSelectedAgents(selectedAgents.filter(a => a.id !== agent.id));\n//     } else {\n//       setSelectedAgents([...selectedAgents, agent]);\n//     }\n//   };\n\n//   const handleStart = async () => {\n//     // 檢查是否有 roomId\n//     if (!roomId) {\n//       console.error('Room ID is missing');\n//       alert('無法加入房間，缺少房間 ID');\n//       return;\n//     }\n\n//     // 檢查身份 - 使用兩種可能的 key 來獲取用戶名稱\n//     const username = localStorage.getItem('username') || localStorage.getItem('userName');\n\n//     if (!username) {\n//       console.error('Username not found in localStorage');\n//       alert('請先設定您的用戶名稱');\n//       navigate('/');\n//       return;\n//     }\n\n//     setIsLoading(true);\n\n//     try {\n//       console.log(`Joining room ${roomId} as ${username}`);\n\n//       // 將選定的 AI 代理轉換為伙伴格式\n//       const aiPartners = selectedAgents.map(agent => ({\n//         id: agent.id,\n//         name: agent.role,\n//         role: agent.role\n//       }));\n\n//       // 直接導航到房間，把 AI 伙伴作為狀態傳遞\n//       navigate(`/room/${roomId}`, {\n//         state: {\n//           aiPartners: aiPartners\n//         }\n//       });\n//     } catch (error) {\n//       console.error('Error starting room:', error);\n//       alert('加入房間時發生錯誤，請稍後再試');\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <Header>\n//         <BackButton onClick={() => navigate('/')}>←</BackButton>\n//         <Title>Select AI partners...</Title>\n//       </Header>\n\n//       <AIGrid>\n//         {aiAgents.map((agent) => (\n//           <AIOption \n//             key={agent.id} \n//             selected={selectedAgents.some(a => a.id === agent.id)}\n//             onClick={() => toggleAgent(agent)}\n//           >\n//             <AIAvatar selected={selectedAgents.some(a => a.id === agent.id)}>\n//               <AIImage src={agent.avatar || `/placeholder-${agent.role.toLowerCase()}.png`} alt={agent.role} />\n//             </AIAvatar>\n//             <AIRole>{agent.role}</AIRole>\n//           </AIOption>\n//         ))}\n//         <AIOption>\n//           <AddButton>+</AddButton>\n//         </AIOption>\n//       </AIGrid>\n\n//       <StartButton \n//         onClick={handleStart} \n//         disabled={isLoading}\n//       >\n//         {isLoading ? 'Loading...' : 'Start'}\n//       </StartButton>\n//     </Container>\n//   );\n// };\n\n// export default SelectAIPartners;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  height: 100vh;\n`;\n_c = Container;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n_c2 = Header;\nconst BackButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 20px;\n  cursor: pointer;\n`;\n_c3 = BackButton;\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-left: 12px;\n`;\n_c4 = Title;\nconst AIGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr); /* 2 columns for smaller screen */\n  gap: 16px;\n  margin-bottom: 24px;\n`;\n_c5 = AIGrid;\nconst AIOption = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 10px;\n`;\n_c6 = AIOption;\nconst AIAvatar = styled.div`\n  width: 80px;\n  height: 80px;\n  background-color: #e0e0e0;\n  border-radius: 10px;\n  margin-bottom: 8px;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: ${props => props.selected ? '3px solid rgb(197, 152, 54)' : 'none'};\n`;\n_c7 = AIAvatar;\nconst AIImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n_c8 = AIImage;\nconst AIRole = styled.div`\n  font-size: 14px;\n  font-weight: bold;\n  text-align: center;\n`;\n_c9 = AIRole;\nconst StartButton = styled.button`\n  padding: 12px 24px;\n  font-size: 16px;\n  background-color: #e0e0e0;\n  border: none;\n  border-radius: 24px;\n  cursor: pointer;\n  align-self: center;\n  margin-top: auto;\n\n  &:hover {\n    background-color: #d0d0d0;\n  }\n`;\n_c10 = StartButton;\nconst SelectAIPartners = () => {\n  _s();\n  var _location$state, _location$state2;\n  const [aiAgents, setAiAgents] = useState([{\n    id: 1,\n    role: 'Designer',\n    avatar: '/img/designer.png'\n  }, {\n    id: 2,\n    role: 'Engineer',\n    avatar: '/img/engineer.png'\n  }, {\n    id: 3,\n    role: 'Finance',\n    avatar: '/img/finance.png'\n  }, {\n    id: 4,\n    role: 'Professor',\n    avatar: '/img/professor.png'\n  }]);\n  const [selectedAgents, setSelectedAgents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const roomId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.roomId;\n  const isCreating = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.isCreating) || false;\n  useEffect(() => {\n    if (!roomId) {\n      // No room ID provided, redirect back to home\n      navigate('/');\n      return;\n    }\n\n    // Only room creators should see this page\n    if (!isCreating) {\n      navigate(`/room/${roomId}`);\n      return;\n    }\n\n    // Fetch AI agents from backend\n    const fetchAIAgents = async () => {\n      try {\n        const response = await axios.get('http://localhost:8001/api/ai-agents/');\n        if (response.data.length > 0) {\n          setAiAgents(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching AI agents:', error);\n      }\n    };\n    fetchAIAgents();\n  }, [roomId, isCreating, navigate]);\n  const toggleAgent = agent => {\n    if (selectedAgents.find(a => a.id === agent.id)) {\n      setSelectedAgents(selectedAgents.filter(a => a.id !== agent.id));\n    } else {\n      setSelectedAgents([...selectedAgents, agent]);\n    }\n  };\n  const handleStart = async () => {\n    // Check if we have a room ID\n    if (!roomId) {\n      console.error('Room ID is missing');\n      alert('Unable to join room, room ID is missing');\n      return;\n    }\n\n    // Check for user name\n    const username = localStorage.getItem('username');\n    if (!username) {\n      console.error('Username not found in localStorage');\n      alert('Please set your user name first');\n      navigate('/');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      console.log(`Joining room ${roomId} as ${username} with ${selectedAgents.length} AI partners`);\n\n      // Register the user in the room\n      await axios.post(`http://localhost:8001/api/rooms/${roomId}/join/`, {\n        name: username,\n        is_ai: false\n      });\n\n      // Add selected AI partners to the room\n      for (const agent of selectedAgents) {\n        await axios.post(`http://localhost:8001/api/rooms/${roomId}/join/`, {\n          name: agent.role,\n          is_ai: true,\n          ai_agent: agent.id\n        });\n      }\n\n      // Navigate to the room\n      navigate(`/room/${roomId}`);\n    } catch (error) {\n      console.error('Error starting room:', error);\n      alert('Error joining room, please try again later');\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: () => navigate('/'),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Select AI partners...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AIGrid, {\n      children: aiAgents.map(agent => /*#__PURE__*/_jsxDEV(AIOption, {\n        selected: selectedAgents.some(a => a.id === agent.id),\n        onClick: () => toggleAgent(agent),\n        children: [/*#__PURE__*/_jsxDEV(AIAvatar, {\n          selected: selectedAgents.some(a => a.id === agent.id),\n          children: /*#__PURE__*/_jsxDEV(AIImage, {\n            src: agent.avatar || `/placeholder-${agent.role.toLowerCase()}.png`,\n            alt: agent.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AIRole, {\n          children: agent.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)]\n      }, agent.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n      onClick: handleStart,\n      disabled: isLoading,\n      children: isLoading ? 'Loading...' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectAIPartners, \"gp5X34JPgFEZClSMgfq0dxtSgJY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c11 = SelectAIPartners;\nexport default SelectAIPartners;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"BackButton\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"AIGrid\");\n$RefreshReg$(_c6, \"AIOption\");\n$RefreshReg$(_c7, \"AIAvatar\");\n$RefreshReg$(_c8, \"AIImage\");\n$RefreshReg$(_c9, \"AIRole\");\n$RefreshReg$(_c10, \"StartButton\");\n$RefreshReg$(_c11, \"SelectAIPartners\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","styled","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","BackButton","button","_c3","Title","h1","_c4","AIGrid","_c5","AIOption","_c6","AIAvatar","props","selected","_c7","AIImage","img","_c8","AIRole","_c9","StartButton","_c10","SelectAIPartners","_s","_location$state","_location$state2","aiAgents","setAiAgents","id","role","avatar","selectedAgents","setSelectedAgents","isLoading","setIsLoading","navigate","location","roomId","state","isCreating","fetchAIAgents","response","get","data","length","error","console","toggleAgent","agent","find","a","filter","handleStart","alert","username","localStorage","getItem","log","post","name","is_ai","ai_agent","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","some","src","toLowerCase","alt","disabled","_c11","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/桌面/HCI+D/video_app/frontend/src/components/SelectAIPartners.js"],"sourcesContent":["// // frontend/src/components/SelectAIPartners.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import styled from 'styled-components';\r\n\r\n// const Container = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   padding: 12px;\r\n//   height: 100vh;\r\n// `;\r\n\r\n// const Header = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   margin-bottom: 24px;\r\n// `;\r\n\r\n// const BackButton = styled.button`\r\n//   background: none;\r\n//   border: none;\r\n//   font-size: 20px;\r\n//   cursor: pointer;\r\n// `;\r\n\r\n// const Title = styled.h1`\r\n//   font-size: 24px;\r\n//   margin-left: 12px;\r\n// `;\r\n\r\n// const AIGrid = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: repeat(2, 1fr); /* 2 columns for smaller screen */\r\n//   gap: 16px;\r\n//   margin-bottom: 24px;\r\n// `;\r\n\r\n// const AIOption = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: center;\r\n//   cursor: pointer;\r\n//   padding: 5px;\r\n//   border-radius: 10px;\r\n// `;\r\n\r\n// const AIAvatar = styled.div`\r\n//   width: 80px;\r\n//   height: 80px;\r\n//   background-color: #e0e0e0;\r\n//   border-radius: 10px;\r\n//   margin-bottom: 8px;\r\n//   overflow: hidden;\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   border: ${props => props.selected ? '3px solid rgb(197, 152, 54)' : 'none'};\r\n// `;\r\n\r\n// const AIImage = styled.img`\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   object-fit: cover;\r\n// `;\r\n\r\n// const AIRole = styled.div`\r\n//   font-size: 14px;\r\n//   font-weight: bold;\r\n//   text-align: center;\r\n// `;\r\n\r\n// const AddButton = styled.div`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   width: 80px;\r\n//   height: 80px;\r\n//   background-color: #f0f0f0;\r\n//   border: 2px dashed #aaa;\r\n//   border-radius: 10px;\r\n//   cursor: pointer;\r\n//   font-size: 24px;\r\n// `;\r\n\r\n// const StartButton = styled.button`\r\n//   padding: 12px 24px;\r\n//   font-size: 16px;\r\n//   background-color: #e0e0e0;\r\n//   border: none;\r\n//   border-radius: 24px;\r\n//   cursor: pointer;\r\n//   align-self: center;\r\n//   margin-top: auto;\r\n\r\n//   &:hover {\r\n//     background-color: #d0d0d0;\r\n//   }\r\n// `;\r\n\r\n// const SelectAIPartners = () => {\r\n//   const [aiAgents, setAiAgents] = useState([\r\n//     { id: 1, role: 'Designer', avatar: '/img/designer.png' },\r\n//     { id: 2, role: 'Engineer', avatar: '/img/engineer.png' },\r\n//     { id: 3, role: 'Finance', avatar: '/img/finance.png' },\r\n//     { id: 4, role: 'Professor', avatar: '/img/professor.png' }\r\n//   ]);\r\n//   const [selectedAgents, setSelectedAgents] = useState([]);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n  \r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n// //   const params = new URLSearchParams(location.search);\r\n// //   const roomId = params.get('roomId');\r\n//     const roomId = location.state?.roomId;\r\n  \r\n//   useEffect(() => {\r\n//     // Fetch AI agents from backend\r\n//     const fetchAIAgents = async () => {\r\n//       try {\r\n//         const response = await axios.get('/api/ai-agents/');\r\n//         if (response.data.length > 0) {\r\n//           setAiAgents(response.data);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error fetching AI agents:', error);\r\n//       }\r\n//     };\r\n    \r\n//     fetchAIAgents();\r\n//   }, []);\r\n  \r\n//   const toggleAgent = (agent) => {\r\n//     if (selectedAgents.find(a => a.id === agent.id)) {\r\n//       setSelectedAgents(selectedAgents.filter(a => a.id !== agent.id));\r\n//     } else {\r\n//       setSelectedAgents([...selectedAgents, agent]);\r\n//     }\r\n//   };\r\n  \r\n//   const handleStart = async () => {\r\n//     // 檢查是否有 roomId\r\n//     if (!roomId) {\r\n//       console.error('Room ID is missing');\r\n//       alert('無法加入房間，缺少房間 ID');\r\n//       return;\r\n//     }\r\n    \r\n//     // 檢查身份 - 使用兩種可能的 key 來獲取用戶名稱\r\n//     const username = localStorage.getItem('username') || localStorage.getItem('userName');\r\n    \r\n//     if (!username) {\r\n//       console.error('Username not found in localStorage');\r\n//       alert('請先設定您的用戶名稱');\r\n//       navigate('/');\r\n//       return;\r\n//     }\r\n    \r\n//     setIsLoading(true);\r\n    \r\n//     try {\r\n//       console.log(`Joining room ${roomId} as ${username}`);\r\n      \r\n//       // 將選定的 AI 代理轉換為伙伴格式\r\n//       const aiPartners = selectedAgents.map(agent => ({\r\n//         id: agent.id,\r\n//         name: agent.role,\r\n//         role: agent.role\r\n//       }));\r\n      \r\n//       // 直接導航到房間，把 AI 伙伴作為狀態傳遞\r\n//       navigate(`/room/${roomId}`, {\r\n//         state: {\r\n//           aiPartners: aiPartners\r\n//         }\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error starting room:', error);\r\n//       alert('加入房間時發生錯誤，請稍後再試');\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <Container>\r\n//       <Header>\r\n//         <BackButton onClick={() => navigate('/')}>←</BackButton>\r\n//         <Title>Select AI partners...</Title>\r\n//       </Header>\r\n      \r\n//       <AIGrid>\r\n//         {aiAgents.map((agent) => (\r\n//           <AIOption \r\n//             key={agent.id} \r\n//             selected={selectedAgents.some(a => a.id === agent.id)}\r\n//             onClick={() => toggleAgent(agent)}\r\n//           >\r\n//             <AIAvatar selected={selectedAgents.some(a => a.id === agent.id)}>\r\n//               <AIImage src={agent.avatar || `/placeholder-${agent.role.toLowerCase()}.png`} alt={agent.role} />\r\n//             </AIAvatar>\r\n//             <AIRole>{agent.role}</AIRole>\r\n//           </AIOption>\r\n//         ))}\r\n//         <AIOption>\r\n//           <AddButton>+</AddButton>\r\n//         </AIOption>\r\n//       </AIGrid>\r\n      \r\n//       <StartButton \r\n//         onClick={handleStart} \r\n//         disabled={isLoading}\r\n//       >\r\n//         {isLoading ? 'Loading...' : 'Start'}\r\n//       </StartButton>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default SelectAIPartners;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 12px;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n  margin-left: 12px;\r\n`;\r\n\r\nconst AIGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr); /* 2 columns for smaller screen */\r\n  gap: 16px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst AIOption = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst AIAvatar = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #e0e0e0;\r\n  border-radius: 10px;\r\n  margin-bottom: 8px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: ${props => props.selected ? '3px solid rgb(197, 152, 54)' : 'none'};\r\n`;\r\n\r\nconst AIImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst AIRole = styled.div`\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n`;\r\n\r\nconst StartButton = styled.button`\r\n  padding: 12px 24px;\r\n  font-size: 16px;\r\n  background-color: #e0e0e0;\r\n  border: none;\r\n  border-radius: 24px;\r\n  cursor: pointer;\r\n  align-self: center;\r\n  margin-top: auto;\r\n\r\n  &:hover {\r\n    background-color: #d0d0d0;\r\n  }\r\n`;\r\n\r\nconst SelectAIPartners = () => {\r\n  const [aiAgents, setAiAgents] = useState([\r\n    { id: 1, role: 'Designer', avatar: '/img/designer.png' },\r\n    { id: 2, role: 'Engineer', avatar: '/img/engineer.png' },\r\n    { id: 3, role: 'Finance', avatar: '/img/finance.png' },\r\n    { id: 4, role: 'Professor', avatar: '/img/professor.png' }\r\n  ]);\r\n  const [selectedAgents, setSelectedAgents] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const roomId = location.state?.roomId;\r\n  const isCreating = location.state?.isCreating || false;\r\n  \r\n  useEffect(() => {\r\n    if (!roomId) {\r\n      // No room ID provided, redirect back to home\r\n      navigate('/');\r\n      return;\r\n    }\r\n    \r\n    // Only room creators should see this page\r\n    if (!isCreating) {\r\n      navigate(`/room/${roomId}`);\r\n      return;\r\n    }\r\n    \r\n    // Fetch AI agents from backend\r\n    const fetchAIAgents = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8001/api/ai-agents/');\r\n        if (response.data.length > 0) {\r\n          setAiAgents(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching AI agents:', error);\r\n      }\r\n    };\r\n    \r\n    fetchAIAgents();\r\n  }, [roomId, isCreating, navigate]);\r\n  \r\n  const toggleAgent = (agent) => {\r\n    if (selectedAgents.find(a => a.id === agent.id)) {\r\n      setSelectedAgents(selectedAgents.filter(a => a.id !== agent.id));\r\n    } else {\r\n      setSelectedAgents([...selectedAgents, agent]);\r\n    }\r\n  };\r\n  \r\n  const handleStart = async () => {\r\n    // Check if we have a room ID\r\n    if (!roomId) {\r\n      console.error('Room ID is missing');\r\n      alert('Unable to join room, room ID is missing');\r\n      return;\r\n    }\r\n    \r\n    // Check for user name\r\n    const username = localStorage.getItem('username');\r\n    \r\n    if (!username) {\r\n      console.error('Username not found in localStorage');\r\n      alert('Please set your user name first');\r\n      navigate('/');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      console.log(`Joining room ${roomId} as ${username} with ${selectedAgents.length} AI partners`);\r\n      \r\n      // Register the user in the room\r\n      await axios.post(`http://localhost:8001/api/rooms/${roomId}/join/`, {\r\n        name: username,\r\n        is_ai: false\r\n      });\r\n      \r\n      // Add selected AI partners to the room\r\n      for (const agent of selectedAgents) {\r\n        await axios.post(`http://localhost:8001/api/rooms/${roomId}/join/`, {\r\n          name: agent.role,\r\n          is_ai: true,\r\n          ai_agent: agent.id\r\n        });\r\n      }\r\n      \r\n      // Navigate to the room\r\n      navigate(`/room/${roomId}`);\r\n    } catch (error) {\r\n      console.error('Error starting room:', error);\r\n      alert('Error joining room, please try again later');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <BackButton onClick={() => navigate('/')}>←</BackButton>\r\n        <Title>Select AI partners...</Title>\r\n      </Header>\r\n      \r\n      <AIGrid>\r\n        {aiAgents.map((agent) => (\r\n          <AIOption \r\n            key={agent.id} \r\n            selected={selectedAgents.some(a => a.id === agent.id)}\r\n            onClick={() => toggleAgent(agent)}\r\n          >\r\n            <AIAvatar selected={selectedAgents.some(a => a.id === agent.id)}>\r\n              <AIImage src={agent.avatar || `/placeholder-${agent.role.toLowerCase()}.png`} alt={agent.role} />\r\n            </AIAvatar>\r\n            <AIRole>{agent.role}</AIRole>\r\n          </AIOption>\r\n        ))}\r\n      </AIGrid>\r\n      \r\n      <StartButton \r\n        onClick={handleStart} \r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? 'Loading...' : 'Start'}\r\n      </StartButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SelectAIPartners;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG;AAC5B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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}